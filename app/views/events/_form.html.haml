=form_tag(events_path, method: "post") do 
  %div.row
    %div.col-md-2
    %div.col-md-8
      .panel
        .panel-body
          .alert-text
            -if @event.errors.count > 0
              =@event.errors.first.last  
          .panel-text{:style => "text-align: left;"}
            %div.row
              %div.col-md-1
              %div.col-md-5
                %strong{:style => "font-size:20px"}
                  ="Event Name"
              %div.col-md-4   
                %input{:type => "string", :name => 'event[name]', :value => @event.name, :style=>"width:100%;", :maxlength => "100"}
            %div.row.spacer
              %div.col-md-1
              %div.col-md-5
                %strong{:style => "font-size:20px"}
                  ="Sipping Point"
                %div.hint-text
                  Set the minimum number of attendees.
              %div.col-md-4
                %select{:name => "event[threshold]"}
                  =(1..20).to_a.each do |sp|
                    -if sp == @event.threshold
                      %option{:value => sp, :selected => 1}
                        =sp
                    -else
                      %option{:value => sp}
                        =sp
            %div.row.spacer
              %div.col-md-1
              %div.col-md-5
                %strong{:style => "font-size:20px"}
                  ="Event Date and Time"
              %div.col-md-4
                %input{:id => 'event_time', :readonly => "true", :type => "string", :name => 'event[time]', :value => @event.time, :maxlength => "500"}

            %div.row.spacer
              %div.col-md-1
              %div.col-md-5
                %strong{:style => "font-size:20px"}
                  ="Deadline to RSVP"
                %div.hint-text
                  The event will be canceled unless the Sipping Point is reached by this time.
              %div.col-md-4
                %input{:id => 'event_deadline', :readonly => "true", :type => "string", :name => 'event[deadline]', :value => @event.deadline, :maxlength => "500"}

            %div.row.spacer.hidden
              %div.col-md-1
              %div.col-md-5
                %strong{:style => "font-size:20px"}
                  ="Hidden Field to Save Time Zone"
              %div.col-md-4
                %input{:id => 'event_timezone', :readonly => "true", :type => "string", :name => 'event[timezone]', :value => "timezone_goes_here", :maxlength => "500"}
          

  %button.btn.btn-primary.btn-xl{:type => "submit"} 
    Create Event
      
:javascript
  $(document).ready(function() {
    // light modification from http://codereview.stackexchange.com/questions/33527/find-next-occurring-friday-or-any-dayofweek
     var nextFridayAtEight = function() {
      var fridayIdx  = 5;
      var today      = new Date;
      // If today is friday, plan for next week.
      if (today.getDay() === 5) {
        today.setDate(today.getDate() + 7)
      }
      var resultDate = today;
    
      resultDate.setDate(today.getDate() + (7 + fridayIdx - today.getDay()) % 7);
      return resultDate;
    };

    var timezone = jstz.determine();
    var startDate = nextFridayAtEight();
    startDate.setHours(20);
    startDate.setMinutes(0);
    var startValue = startDate.getTime()
    var deadlineDate   = new Date(startDate.getTime());
    deadlineDate.setDate(startDate.getDate() - 1);
    
    $('#event_timezone').attr('value', timezone.name());
    
    // Now create the actual pickers
    $("#event_time").datetimepicker({
       format: 'D, M d g:i A',
       value: startDate,
       minDate: 0,
    });
    $("#event_deadline").datetimepicker({
       format: 'D, M d g:i A',
       value: deadlineDate,
       minDate: 0
    });
  });